{"version":3,"sources":["sound.wav","App.js","reportWebVitals.js","index.js"],"names":["url","audio","Audio","sound","getLocal","value","localStorage","getItem","JSON","parse","getWidth","total","self","Math","ceil","App","useState","totalVoteCount","setTotalVoteCount","brazilsVote","setBrazilsVote","argentinasVote","setArgentinasVote","voted","setVoted","team","setTeam","useEffect","fetch","then","res","json","counts","document","body","style","backgroundImage","getEmoji","yes","handleTeam","tm","method","setItem","stringify","play","className","id","src","alt","width","onClick","FacebookShareButton","network","text","longtext","color","textTransform","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.28b8f1b6.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/sound.51bd33c9.wav\";","import \"./App.css\";\nimport { useState, useEffect } from \"react\";\nimport { FacebookShareButton } from \"react-share\";\nimport sound from \"./sound.wav\";\nconst url = \"https://stormy-earth-76420.herokuapp.com/api\";\n\nconst audio = new Audio(sound);\n\nconst getLocal = () => {\n  const value = localStorage.getItem(\"voted\");\n  return value ? JSON.parse(value) : \"\";\n};\n\nconst getWidth = (total, self) => {\n  if (self === 0) return;\n  return Math.ceil((self / total) * 100) + \"%\";\n};\n\nfunction App() {\n  const [totalVoteCount, setTotalVoteCount] = useState(0);\n  const [brazilsVote, setBrazilsVote] = useState(0);\n  const [argentinasVote, setArgentinasVote] = useState(0);\n  const [voted, setVoted] = useState(false);\n  const [team, setTeam] = useState(\"\");\n\n  useEffect(() => {\n    fetch(`${url}/counts`)\n      .then((res) => res.json())\n      .then((json) => {\n        setTotalVoteCount(json.counts);\n      });\n    fetch(`${url}/counts/brazil`)\n      .then((res) => res.json())\n      .then((json) => {\n        setBrazilsVote(json.counts);\n      });\n    fetch(`${url}/counts/argentina`)\n      .then((res) => res.json())\n      .then((json) => {\n        setArgentinasVote(json.counts);\n      });\n\n    document.body.style.backgroundImage = `url('bg.jpg')`;\n    if (getLocal()) {\n      setVoted(true);\n      setTeam(getLocal());\n    }\n  }, []);\n\n  const getEmoji = (yes) => {\n    if (!voted) return;\n    return yes ? \"ðŸ˜š\" : \"ðŸ˜©\";\n  };\n\n  const handleTeam = (tm) => {\n    fetch(`${url}/counts`, { method: \"POST\" })\n      .then((res) => res.json())\n      .then((json) => {\n        setTotalVoteCount(json.counts);\n      });\n\n    if (tm === \"bra\") {\n      setBrazilsVote(brazilsVote + 1);\n      fetch(`${url}/counts/brazil`, { method: \"POST\" })\n        .then((res) => res.json())\n        .then((json) => {\n          setTotalVoteCount(json.counts);\n        });\n    } else {\n      setArgentinasVote(argentinasVote + 1);\n      fetch(`${url}/counts/argentina`, { method: \"POST\" })\n        .then((res) => res.json())\n        .then((json) => {\n          setTotalVoteCount(json.counts);\n        });\n    }\n\n    setTotalVoteCount(totalVoteCount + 1);\n    setTeam(tm);\n    localStorage.setItem(\"voted\", JSON.stringify(tm));\n    audio.play();\n    setVoted(true);\n  };\n\n  return (\n    <div className=\"container\" id=\"main\">\n      <h2>\n        Total Votes: <span>{totalVoteCount}</span>\n      </h2>\n\n      <div className=\"box-items\">\n        <div className=\"item \">\n          <img src=\"/argentina.png\" alt=\"\" />\n          <p>\n            <span style={{ width: getWidth(totalVoteCount, argentinasVote) }} className=\"overlay\">\n              {argentinasVote}\n            </span>\n          </p>\n        </div>\n        <div className=\"item\">\n          <img src=\"/brazil.png\" alt=\"\" />\n          <p>\n            <span style={{ width: getWidth(totalVoteCount, brazilsVote) }} className=\"overlay\">\n              {brazilsVote}\n            </span>\n          </p>\n        </div>\n      </div>\n\n      <div className=\"vote-container\">\n        <button onClick={() => handleTeam(\"arg\")} className={voted ? \"voted\" : \"\"}>\n          <img src=\"/argentina.png\" alt=\"\" />\n          <span>{getEmoji(team === \"arg\")}</span>\n        </button>\n        <button onClick={() => handleTeam(\"bra\")} className={voted ? \"voted\" : \"\"}>\n          <img src=\"/brazil.png\" alt=\"\" />\n          <span>{getEmoji(team === \"bra\")}</span>\n        </button>\n      </div>\n\n      <FacebookShareButton\n        {...{\n          url: `#main`,\n          network: \"Facebook\",\n          text: \"Give it a try - react-custom-share component\",\n          longtext:\n            \"Social sharing buttons for React. Use one of the build-in themes or create a custom one from the scratch.\",\n        }}\n      >\n        <span style={{ color: \"blue\", textTransform: \"capitalize\" }}>share with friends</span>\n      </FacebookShareButton>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}